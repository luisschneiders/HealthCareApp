@page "/employees"
@using HealthCareApp.Settings.Theme
@using HealthCareApp.Components.Page
@using HealthCareApp.Components.Toast
@using HealthCareApp.Components.Spinner
@using HealthCareApp.Settings.Enum
@using BaseLibrary

<PageWrapper>
    <PageHeader>
        <PageHeaderTitle Title="Employees"
                   Theme="Theme.Employee" />
        <PageMenu>
            <button type="button"
                    class="btn btn-info btn-rounded btn-icon text-white"
                    title="Add new employee"
                    @onclick="() => OpenModalAddAsync()">
                <i class="bi bi-plus-lg"></i>
            </button>
        </PageMenu>
    </PageHeader>
    <PageBody Styles="p-2">
        <div class="flex-container">
            <div class="flex-container-list ps-1 pe-2">
                <div class="flex-container-list-search py-1">
                    <div class="row g-0">
                        <div class="col">
                            <input
                                    type="text"
                                    class="form-control"
                                    placeholder="Start typing to search employees..."
                                    aria-label="search"
                                    @bind-value="SearchTerm"
                                    @oninput="SearchEmployeeAsync"
                            >
                        </div>
                    </div>
                </div>
                <div class="d-flex flex-row justify-content-evenly align-items-center">
                    <Spinner Size="Size.Md" />
                </div>
                <div class="list-group gap-2">
                    @if (Results is null)
                    {
                        <Virtualize Context="person"
                                    ItemsProvider="@LoadEmployees"
                                    @ref="VirtualizeContainer">
                            <ItemContent>
                                <div class="list-group-item list-group-item-action hca-list-group-item d-flex gap-3 py-3">
                                    <div class="d-flex w-100 justify-content-between align-items-center">
                                        <div class="d-flex @(person.IsActive ? "" : "text-black-50")"
                                             role="button"
                                             @onclick="() => ShowEmployeeDetails(person)"
                                        >
                                            <i class="bi bi-person md-icon"></i>
                                            <div class="ps-1">
                                                <div class="mb-0 fs-5">
                                                    @person.EmployeeFirstName.Truncate((int)Truncate.FirstName) @person.EmployeeLastName.Truncate((int)Truncate.LastName)
                                                </div>
                                                <div>
                                                    <div class="text-muted">
                                                        @person.EmployeeUsername
                                                    </div>
                                                    <div>
                                                        @person.ContactDetails.Email
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="form-check form-switch">
                                                @if (person.IsActive)
                                                {
                                                    <input class="form-check-input"
                                                           type="checkbox"
                                                           role="switch"
                                                           id="IsActive"
                                                           checked
                                                           @onclick="() => UpdateEmployeeStatusAsync(person)"
                                                    />
                                                }
                                                else
                                                {
                                                    <input class="form-check-input"
                                                           type="checkbox"
                                                           role="switch"
                                                           id="IsActive"
                                                           @onclick="() => UpdateEmployeeStatusAsync(person)"
                                                    />
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </ItemContent>
                            <Placeholder>
                                <Spinner Size="Size.Md" />
                            </Placeholder>
                        </Virtualize>
                    }
                    @if (Results is not null)
                    {
                        <div></div>
                        @foreach (var person in Results)
                        {
                            <div class="list-group-item list-group-item-action hca-list-group-item d-flex gap-3 py-3">
                                <div class="d-flex w-100 justify-content-between align-items-center">
                                    <div class="d-flex @(person.IsActive ? "" : "text-black-50")"
                                         role="button"
                                         @onclick="() => ShowEmployeeDetails(person)">
                                        <i class="bi bi-person md-icon"></i>
                                        <div class="ps-1">
                                            <div class="mb-0 fs-5">
                                                @person.EmployeeFirstName.Truncate((int)Truncate.FirstName) @person.EmployeeLastName.Truncate((int)Truncate.LastName)
                                            </div>
                                            <div>
                                                <div class="text-muted">
                                                    @person.EmployeeUsername
                                                </div>
                                                <div>
                                                    @person.ContactDetails.Email
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="form-check form-switch">
                                            @if (person.IsActive)
                                            {
                                                <input class="form-check-input"
                                                       type="checkbox"
                                                       role="switch"
                                                       id="IsActive"
                                                       checked
                                                       @onclick="() => UpdateEmployeeStatusAsync(person)" />
                                            }
                                            else
                                            {
                                                <input class="form-check-input"
                                                       type="checkbox"
                                                       role="switch"
                                                       id="IsActive"
                                                       @onclick="() => UpdateEmployeeStatusAsync(person)" />
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="flex-container-main ps-2">
                <EmployeeDetails Info="EmployeeDetails" Loading="IsLoading" />
                @if (!IsLoading && EmployeeDetails is not null)
                {
                    <div class="d-flex flex-row justify-content-end">
                        <button type="button"
                                class="btn btn-info btn-rounded text-white"
                                @onclick="() => OpenModalUpdateAsync(EmployeeDetails.Id)">
                            Update Details
                        </button>
                    </div>
                }
            </div>
        </div>
        <Toast />
    </PageBody>
    <PageFooter></PageFooter>
</PageWrapper>
<EmployeeModalAdd @ref="EmployeeModalAdd" OnSubmitSuccess="RefreshVirtualizeContainer" />
<EmployeeModalUpdate @ref="EmployeeModalUpdate" OnSubmitSuccess="RefreshVirtualizeContainer" />
