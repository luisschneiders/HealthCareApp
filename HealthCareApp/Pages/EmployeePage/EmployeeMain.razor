@page "/employees"
@using HealthCareApp.Settings.Theme
@using HealthCareApp.Components.Page
@using HealthCareApp.Components.Toast
@using HealthCareApp.Components.Badge
@using HealthCareApp.Components.Spinner
@using HealthCareApp.Settings.Enum

<PageWrapper>
    <PageHeader>
        <PageTitle Title="Employees"
                   Theme="Theme.Employee" />
        <PageMenu>
            <button type="button"
                    class="btn btn-light btn-rounded btn-icon"
                    title="Search">
                <i class="bi bi-search"></i>
            </button>
            <button type="button"
                    class="btn btn-info btn-rounded btn-icon"
                    title="Add new employee"
                    @onclick="() => OpenModalAddAsync()">
                <i class="bi bi-plus-lg"></i>
            </button>
        </PageMenu>
    </PageHeader>
    <PageBody Styles="p-2">
        <div class="d-flex flex-row justify-content-evenly align-items-center">
            <Spinner Size="Size.Md" />
        </div>
        <div class="list-group gap-2">
            <Virtualize Context="person"
                        ItemsProvider="@LoadEmployees"
                        @ref="VirtualizeContainer">
                <ItemContent>
                    <button type="button"
                            class="list-group-item list-group-item-action hca-list-group-item d-flex gap-3 py-3"
                            @onclick="() => OpenModalUpdateAsync(person)"
                    >
                        <i class="bi bi-person md-icon"></i>
                        <div class="d-flex gap-2 w-100 justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-0">
                                    @person.EmployeeFirstName @person.EmployeeLastName
                                </h6>
                                <div class="gap-2 w-100 opacity-75">
                                    <div>
                                        @person.EmployeeUsername
                                    </div>
                                    <div>
                                        @person.ContactDetails.Email
                                    </div>

                                    <address class="mb-0">
                                        @person.Location.Suburb.ToUpper() @person.Location.State.ToUpper() @person.Location.Postcode
                                    </address>

                                </div>
                            </div>
                            <div>
                                @if (person.IsActive)
                                {
                                    <Badge Level="Level.Success" Message="Active" />
                                }
                                else
                                {
                                    <Badge Level="Level.Warning" Message="Inactive" />
                                }
                            </div>
                        </div>
                    </button>
                </ItemContent>
                <Placeholder>
                    <Spinner Size="Size.Md" />
                </Placeholder>
            </Virtualize>
        </div>
        <Toast />
    </PageBody>
    <PageFooter></PageFooter>
</PageWrapper>
<EmployeeModalAdd @ref="EmployeeModalAdd" OnSubmitSuccess="RefreshVirtualizeContainer" />
<EmployeeModalUpdate @ref="EmployeeModalUpdate" OnSubmitSuccess="RefreshVirtualizeContainer" />
